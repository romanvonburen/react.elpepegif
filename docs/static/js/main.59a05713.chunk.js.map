{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,mCACI,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBU,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,eA0B/BZ,EAAYe,WAAa,CACrBd,c,OAAee,EAAUC,KAAKC,Y,mCCpCrBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGlC,OACI,sBAAKc,UAAU,6CAAf,UAEI,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,8BAAKA,EAAL,WCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAQ,IAJ4B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAwBxC,OAjBAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAOtB,CAACpB,IAIGqB,EDnByBK,CAAc1B,GAAjCa,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAGrB,OACI,qCAEK,mCAAOpB,EAAP,OAECoB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADAA,EAAIC,aEjBxBgB,EAAe,WAAO,IAAD,EACM7C,mBAAU,CAAC,cADjB,mBACvB8C,EADuB,KACX/C,EADW,KAK9B,OACI,qCACI,oBAAImC,UAAU,wCAAd,yBACA,cAAC,EAAD,CAAanC,cAAgBA,IAC7B,uBACA,6BAEQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADJA,Y,MCbnC6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.59a05713.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log('Submit hecho')\r\n        //\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cats => [ inputValue, ...cats, ]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.protoTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=30&api_key=rVXk3uVqGt1fQDyG1Z0LPQ7HCy3Fc0R3`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__backInLeft\">\r\n            \r\n            <img src={ url } alt={title} />\r\n            <p>{ title } </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    \r\n    const { data:images, loading} = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <> \r\n        \r\n             <h3> { category } </h3> \r\n\r\n            { loading && <p>Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img  => (\r\n                        <GifGridItem\r\n                            key={img.id} \r\n                            { ...img } \r\n                        />\r\n                    \r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n     \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false  \r\n                });\r\n\r\n\r\n            })\r\n\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState (['Thrillers']);\n    //const handleAdd = () => {\n    //    setCategories( cats => [...cats, 'Horror Movies']);\n    //}\n    return (\n        <>\n            <h1 className=\"animate__animated animate__zoomInDown\">EL PEPE GIF</h1>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            key= { category }\n                            category={ category} \n                        />\n                    ))\n                }\n            </ol>\n\n        </>\n    )\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}